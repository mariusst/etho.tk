[Namespaces: 
  rdf	= http://www.w3.org/1999/02/22-rdf-syntax-ns#
  xsd	= http://www.w3.org/2001/XMLSchema#
  rdfs	= http://www.w3.org/2000/01/rdf-schema#
  owl	= http://www.w3.org/2002/07/owl#
  pp	= http://cohse.semanticweb.org/ontologies/people#
]

Ontology(
 Class(pp:bone partial)
 Class(pp:brain partial)
 Class(pp:white+thing partial)

 Class(pp:plant partial)
 Class(pp:grass partial pp:plant)
 Class(pp:tree partial pp:plant)
 Class(pp:leaf partial restriction(pp:part_of someValuesFrom(pp:tree)))

 Class(pp:vehicle partial)
 Class(pp:bicycle partial pp:vehicle)
 Class(pp:bus partial pp:vehicle)
 Class(pp:car partial pp:vehicle)
 Class(pp:lorry partial pp:vehicle)
 Class(pp:truck partial pp:vehicle)
 Class(pp:van partial pp:vehicle)

 Class(pp:company partial)
 Class(pp:bus+company partial pp:company)
 Class(pp:haulage+company partial pp:company)

 Class(pp:publication partial)
 Class(pp:magazine partial pp:publication)
 Class(pp:broadsheet partial pp:newspaper)
 Class(pp:quality+broadsheet partial pp:broadsheet)
 Class(pp:tabloid partial pp:newspaper)
 Class(pp:red+top partial pp:tabloid)
 Class(pp:newspaper partial unionOf(pp:broadsheet pp:tabloid) pp:publication)

 Class(pp:male partial)
 Class(pp:female partial)
 Class(pp:young partial)
 Class(pp:adult partial)
 Class(pp:elderly partial pp:adult)

 Class(pp:pet complete restriction(pp:is_pet_of someValuesFrom(owl:Thing)))

 Class(pp:animal partial restriction(pp:eats someValuesFrom(owl:Thing)))
 Class(pp:vegetarian complete 
    intersectionOf(pp:animal
      restriction(pp:eats allValuesFrom(complementOf(pp:animal)))
      restriction(pp:eats 
	 allValuesFrom(complementOf(restriction(pp:part_of 
					        someValuesFrom(pp:animal)))))))
 Class(pp:duck partial pp:animal)
 Class(pp:cat partial pp:animal)
 Class(pp:tiger partial pp:animal)
 Class(pp:dog partial restriction(pp:eats someValuesFrom(pp:bone)))
 Class(pp:sheep partial pp:animal restriction(pp:eats allValuesFrom pp:grass))
 Class(pp:giraffe partial pp:animal restriction(pp:eats allValuesFrom pp:leaf))
 Class(pp:cow partial pp:vegetarian)
 Class(pp:mad+cow complete 
    intersectionOf(pp:cow restriction(pp:eats 
	someValuesFrom(intersectionOf(pp:brain 
                restriction(pp:part_of someValuesFrom pp:sheep))))))

 Class(pp:person partial pp:animal)
 Class(pp:kid complete intersectionOf(pp:young pp:person))
 Class(pp:man complete intersectionOf(pp:person pp:male pp:adult))
 Class(pp:woman complete intersectionOf(pp:female pp:person pp:adult))
 Class(pp:old+lady complete intersectionOf(pp:elderly pp:female pp:person))
 Class(pp:old+lady partial 
    intersectionOf(restriction(pp:has_pet allValuesFrom(pp:cat)) 
		   restriction(pp:has_pet someValuesFrom(pp:animal))))
 Class(pp:grownup complete intersectionOf(pp:person pp:adult))

 Class(pp:animal+lover complete 
    intersectionOf(pp:person restriction(pp:has_pet minCardinality(3))))
 Class(pp:pet+owner complete 
    intersectionOf(restriction(pp:has_pet someValuesFrom(pp:animal)) pp:person))
 Class(pp:cat+liker complete 
    intersectionOf(restriction(pp:likes someValuesFrom(pp:cat)) pp:person))
 Class(pp:cat+owner complete 
    intersectionOf(pp:person restriction(pp:has_pet someValuesFrom(pp:cat))))
 Class(pp:dog+liker complete 
    intersectionOf(restriction(pp:likes someValuesFrom(pp:dog)) pp:person))
 Class(pp:dog+owner complete 
    intersectionOf(restriction(pp:has_pet someValuesFrom(pp:dog)) pp:person))

 Class(pp:driver partial pp:adult)
 Class(pp:driver complete 
    intersectionOf(restriction(pp:drives someValuesFrom(pp:vehicle)) pp:person))
 Class(pp:lorry+driver complete 
    intersectionOf(restriction(pp:drives someValuesFrom(pp:lorry)) pp:person))
 Class(pp:haulage+worker complete 
  restriction(pp:works_for 
	someValuesFrom(unionOf(restriction(pp:part_of someValuesFrom(pp:haulage+company))
		 pp:haulage+company))))
 Class(pp:haulage+truck+driver complete 
    intersectionOf(pp:person 
	restriction(pp:drives someValuesFrom(pp:truck))
	restriction(pp:works_for 
	   someValuesFrom(
		restriction(pp:part_of someValuesFrom(pp:haulage+company))))))
 Class(pp:van+driver complete 
    intersectionOf(pp:person restriction(pp:drives someValuesFrom(pp:van))))
 Class(pp:bus+driver complete 
    intersectionOf(pp:person restriction(pp:drives someValuesFrom(pp:bus))))
 Class(pp:white+van+man complete 
    intersectionOf(pp:man 
	restriction(pp:drives
	    someValuesFrom(intersectionOf(pp:white+thing pp:van)))))
 Class(pp:white+van+man partial 
    restriction(pp:reads allValuesFrom pp:tabloid))

 DisjointClasses(pp:broadsheet pp:tabloid)
 DisjointClasses(pp:dog pp:cat)
 DisjointClasses(pp:young pp:adult)
 DisjointClasses(unionOf(pp:animal restriction(pp:part_of 
  						someValuesFrom pp:animal))
		 unionOf(pp:plant restriction(pp:part_of 
						someValuesFrom pp:plant)))

 ObjectProperty(pp:likes)
 ObjectProperty(pp:drives)
 ObjectProperty(pp:eaten_by)
 ObjectProperty(pp:eats inverseOf(pp:eaten_by) domain(pp:animal)) 
 ObjectProperty(pp:works_for)
 ObjectProperty(pp:reads range(pp:publication))

 ObjectProperty(pp:has_parent)
 ObjectProperty(pp:has_father range(pp:man))
 ObjectProperty(pp:has_mother range(pp:woman))
 ObjectProperty(pp:has_child)

 ObjectProperty(pp:has_pet domain(pp:person) range(pp:animal))
 ObjectProperty(pp:is_pet_of inverseOf(pp:has_pet))
 ObjectProperty(pp:part_of)
 ObjectProperty(pp:has_part inverseOf(pp:part_of))

 DataProperty(pp:service_number range(xsd:integer))

 SubPropertyOf(pp:has_mother pp:has_parent)
 SubPropertyOf(pp:has_pet pp:likes)
 SubPropertyOf(pp:has_father pp:has_parent)

 Individual(pp:Tom type(owl:Thing))
 Individual(pp:Dewey type(pp:duck))
 Individual(pp:Huey type(pp:duck))
 Individual(pp:Louie type(pp:duck))
 Individual(pp:Fido type(pp:dog))
 Individual(pp:Flossie type(pp:cow))
 Individual(pp:Fluffy type(pp:tiger))
 Individual(pp:Rex type(pp:dog) value(pp:is_pet_of pp:Mick))
 Individual(pp:Q123+ABC type(pp:white+thing) type(pp:van))
 Individual(pp:Tibbs type(pp:cat))

 Individual(pp:Daily+Mirror type(owl:Thing))
 Individual(pp:The+Guardian type(pp:broadsheet))
 Individual(pp:The+Sun type(pp:tabloid))
 Individual(pp:The+Times type(pp:broadsheet))

 Individual(pp:The42 type(pp:bus)
    value(pp:service_number [42^^http://www.w3.org/2001/XMLSchema#integer]))

 Individual(pp:Kevin type(pp:person))
 Individual(pp:Fred type(pp:person) value(pp:has_pet pp:Tibbs))
 Individual(pp:Joe type(pp:person)
    type(restriction(pp:has_pet maxCardinality(1)))
    value(pp:has_pet pp:Fido))
 Individual(pp:Mick type(pp:male)
    value(pp:reads pp:Daily+Mirror)
    value(pp:drives pp:Q123+ABC))
 Individual(pp:Minnie type(pp:elderly) type(pp:female)
    value(pp:has_pet pp:Tom))
 Individual(pp:Walt type(pp:person)
    value(pp:has_pet pp:Huey)
    value(pp:has_pet pp:Louie)
    value(pp:has_pet pp:Dewey))
)
